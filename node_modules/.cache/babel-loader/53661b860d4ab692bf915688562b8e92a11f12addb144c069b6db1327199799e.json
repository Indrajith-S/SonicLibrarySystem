{"ast":null,"code":"var _jsxFileName = \"/home/aryanx23/Public/sonicLibrarySystem/src/LoginContext/index.js\",\n  _s = $RefreshSig$();\nimport React, { createContext } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Provider,\n  Consumer\n} = /*#__PURE__*/createContext(null);\nfunction LoginContextProvider(props) {\n  _s();\n  const [userDetails, setUserDetails] = React.useState({\n    isLoggedIn: false\n  });\n  return getIsLoggedIn({\n    props,\n    userDetails,\n    setUserDetails\n  });\n}\n_s(LoginContextProvider, \"YkcLwASwartJFkjbUJkCnGLOwTQ=\");\n_c = LoginContextProvider;\nconst getIsLoggedIn = async _ref => {\n  let {\n    props,\n    userDetails,\n    setUserDetails\n  } = _ref;\n  console.log(\"context: \" + userDetails.isLoggedIn);\n  const request = {\n    method: 'post',\n    url: \"http://localhost:4000/login\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    withCredentials: true\n  };\n  const val = await axios(request).then(response => response.data);\n  setUserDetails(prevValue => val);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: {\n      userDetails,\n      setUserDetails\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 17\n  }, this);\n};\nexport { LoginContextProvider, Consumer as LoginContextConsumer };\nvar _c;\n$RefreshReg$(_c, \"LoginContextProvider\");","map":{"version":3,"names":["React","createContext","axios","Provider","Consumer","LoginContextProvider","props","userDetails","setUserDetails","useState","isLoggedIn","getIsLoggedIn","console","log","request","method","url","headers","withCredentials","val","then","response","data","prevValue","children","LoginContextConsumer"],"sources":["/home/aryanx23/Public/sonicLibrarySystem/src/LoginContext/index.js"],"sourcesContent":["import React, {createContext} from 'react'\nimport axios from 'axios';\nconst { Provider , Consumer} = createContext(null);\n\n\nfunction LoginContextProvider(props){\n        const [userDetails,setUserDetails] = React.useState({isLoggedIn:false});\n        return getIsLoggedIn({props,userDetails,setUserDetails});\n}\n\nconst getIsLoggedIn = async ({props,userDetails,setUserDetails}) => {\n        console.log(\"context: \"+userDetails.isLoggedIn);\n        const request = {\n                method: 'post',\n                url:\"http://localhost:4000/login\",\n                headers: {'Content-Type': 'application/json'}, \n                withCredentials:true\n        }\n        const val = await axios(request)\n                .then(response => response.data)\n        setUserDetails(prevValue => val)\n\n        return (<Provider value={{\n                        userDetails ,\n                        setUserDetails\n                }}>\n                        {props.children}\n                </Provider>);\n}\n\nexport { LoginContextProvider , Consumer as LoginContextConsumer}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,QAAO,OAAO;AAC1C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAC1B,MAAM;EAAEC,QAAQ;EAAGC;AAAQ,CAAC,gBAAGH,aAAa,CAAC,IAAI,CAAC;AAGlD,SAASI,oBAAoB,CAACC,KAAK,EAAC;EAAA;EAC5B,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC;IAACC,UAAU,EAAC;EAAK,CAAC,CAAC;EACvE,OAAOC,aAAa,CAAC;IAACL,KAAK;IAACC,WAAW;IAACC;EAAc,CAAC,CAAC;AAChE;AAAC,GAHQH,oBAAoB;AAAA,KAApBA,oBAAoB;AAK7B,MAAMM,aAAa,GAAG,cAA8C;EAAA,IAAvC;IAACL,KAAK;IAACC,WAAW;IAACC;EAAc,CAAC;EACvDI,OAAO,CAACC,GAAG,CAAC,WAAW,GAACN,WAAW,CAACG,UAAU,CAAC;EAC/C,MAAMI,OAAO,GAAG;IACRC,MAAM,EAAE,MAAM;IACdC,GAAG,EAAC,6BAA6B;IACjCC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,eAAe,EAAC;EACxB,CAAC;EACD,MAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACY,OAAO,CAAC,CACvBM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;EACxCd,cAAc,CAACe,SAAS,IAAIJ,GAAG,CAAC;EAEhC,oBAAQ,QAAC,QAAQ;IAAC,KAAK,EAAE;MACTZ,WAAW;MACXC;IACR,CAAE;IAAA,UACOF,KAAK,CAACkB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACZ;AAC3B,CAAC;AAED,SAASnB,oBAAoB,EAAGD,QAAQ,IAAIqB,oBAAoB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}